{
    "application_name": "data_pipeline_comprehensive",
    "parallel": true,
    "max_workers": 4,
    "default_timeout": 10800,
    "allow_shell": true,
    "security_policy": "warn",
    
    "email_address": "alerts@example.com",
    "email_on_success": false,
    "email_on_failure": true,
    "smtp_server": "smtp.gmail.com",
    "smtp_port": 587,
    "smtp_user": "your-email@gmail.com",
    "smtp_password": "your-app-specific-password",
    
    "default_max_retries": 2,
    "default_retry_delay": 30,
    "default_retry_backoff": 1.5,
    "default_retry_jitter": 0.1,
    "default_max_retry_time": 1800,
    "default_retry_on_exit_codes": [1],
    
    "env_variables": {
        "APP_ENV": "production",
        "LOG_LEVEL": "info",
        "DATA_DIR": "/data",
        "GLOBAL_VAR": "available_to_all_jobs"
    },
    
    "dependency_plugins": [
        {
            "name": "custom_dependency",
            "path": "jobs/plugins/custom_dependency.py"
        }
    ],
    
    "jobs": [
        {
            "id": "download_data",
            "description": "Download raw data from external API",
            "command": "python scripts/download_data.py --date ${RUN_DATE}",
            "timeout": 300,
            "dependencies": [],
            "env_variables": {
                "API_KEY": "your-api-key",
                "DOWNLOAD_PATH": "/data/raw",
                "RUN_DATE": "2025-05-23"
            },
            "pre_checks": [
                {"name": "check_file_exists", "params": {"path": "/data/raw"}}
            ],
            "post_checks": [
                {"name": "check_no_ora_errors", "params": {"log_file": "./logs/download_*.log"}},
                {"name": "check_file_exists", "params": {"path": "/data/raw/data_20250523.csv"}}
            ],
            "max_retries": 3,
            "retry_delay": 20,
            "retry_backoff": 2.0,
            "retry_jitter": 0.2,
            "max_retry_time": 600,
            "retry_on_status": ["ERROR", "FAILED", "TIMEOUT"],
            "retry_on_exit_codes": [1, 2, 255]
        },
        {
            "id": "validate_data",
            "description": "Validate downloaded data quality",
            "command": "python scripts/validate_data.py",
            "dependencies": ["download_data"],
            "timeout": 600,
            "pre_checks": [
                {"name": "check_file_exists", "params": {"path": "/data/raw/data_20250523.csv"}}
            ],
            "post_checks": [
                {"name": "check_no_ora_or_sp2_errors", "params": {"log_file": "./logs/validate.log"}}
            ],
            "env_variables": {
                "VALIDATION_RULES": "strict",
                "DEBUG": "true"
            }
        },
        {
            "id": "transform_data_part1",
            "description": "Transform data part 1 (runs in parallel with part2)",
            "command": "python scripts/transform.py --part 1",
            "dependencies": ["validate_data"],
            "timeout": 900,
            "env_variables": {
                "PART": "1",
                "THREADS": "4"
            }
        },
        {
            "id": "transform_data_part2",
            "description": "Transform data part 2 (runs in parallel with part1)",
            "command": "python scripts/transform.py --part 2",
            "dependencies": ["validate_data"],
            "timeout": 900,
            "env_variables": {
                "PART": "2",
                "THREADS": "4"
            }
        },
        {
            "id": "merge_results",
            "description": "Merge transformed data parts",
            "command": "python scripts/merge_data.py",
            "dependencies": ["transform_data_part1", "transform_data_part2"],
            "timeout": 600,
            "max_retries": 1,
            "retry_on_status": [],
            "retry_on_exit_codes": [99]
        },
        {
            "id": "generate_report",
            "description": "Generate final report in PDF format",
            "command": "python scripts/generate_report.py --format pdf",
            "dependencies": ["merge_results"],
            "timeout": 1200,
            "post_checks": [
                {"name": "check_file_exists", "params": {"path": "/data/reports/daily_report.pdf"}}
            ],
            "max_retries": 0
        },
        {
            "id": "send_notification",
            "description": "Send completion notification via Slack",
            "command": "curl -X POST ${SLACK_WEBHOOK} -H 'Content-type: application/json' -d '{\"text\":\"Pipeline completed successfully!\"}'",
            "dependencies": ["generate_report"],
            "timeout": 60,
            "env_variables": {
                "SLACK_WEBHOOK": "https://hooks.slack.com/services/XXX/YYY/ZZZ"
            },
            "max_retries": 2,
            "retry_delay": 10
        },
        {
            "id": "cleanup_temp_files",
            "description": "Clean up temporary files older than 7 days",
            "command": "find /tmp -name 'pipeline_temp_*' -mtime +7 -delete",
            "dependencies": ["send_notification"],
            "timeout": 300,
            "max_retries": 0
        }
    ]
}
